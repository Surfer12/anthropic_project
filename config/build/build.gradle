
buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0-M2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation 'org.springframework:spring-tx'
    
    // Add Magic dependencies if needed
    
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

// Enable preview features for Java 23
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '--enable-preview'
}

tasks.withType(Test).configureEach {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += '--enable-preview'
}

sourceSets {
    main {
        java {
            srcDirs = ['../../src/main/java']
        }
        resources {
            srcDirs = ['../../src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['../../src/test/java']
        }
        resources {
            srcDirs = ['../../src/test/resources']
        }
    }
}

buildDir = /Users/ryanoates/anthropic_project/build